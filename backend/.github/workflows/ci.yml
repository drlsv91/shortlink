name: Backend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-deploy:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: shortlink
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Run database migrations
        run: |
          pnpm prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shortlink

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: |
          pnpm test
          pnpm test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shortlink
          NODE_ENV: test
          BASE_URL: http://short.est

      - name: Generate coverage badge
        run: |
          COVERAGE=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          COVERAGE_FORMATTED=$(printf "%.2f%%" $COVERAGE)

          # Determine badge color
          color=$(echo "$COVERAGE < 50" | bc)
          BADGE_COLOR=$([[ "$color" == "1" ]] && echo "red" || echo "brightgreen")

          # Create badge URL
          BADGE_URL="https://img.shields.io/badge/Coverage-${COVERAGE_FORMATTED}-${BADGE_COLOR}"

          # Update README (optional, only if in same repo)
          sed -i "s|<!-- BACKEND_COVERAGE_BADGE -->|![Backend Coverage](${BADGE_URL})|g" README.md

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Build Docker image
        run: docker build -t shortlink-backend .

      - name: Deploy to Railway (optional)
        run: npx railway deploy
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
